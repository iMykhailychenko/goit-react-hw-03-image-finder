{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.jsx","components/Modal/Modal.jsx","components/Button/Button.jsx","components/ImageGallery/ImageGallery.jsx","components/Utils/ajaxQuery.js","components/App.jsx","index.js"],"names":["Searchbar","state","search","handleInput","target","name","value","setState","handleSubmit","e","preventDefault","correctSearch","replace","trim","toLocaleLowerCase","onSubmit","props","className","this","type","autoComplete","autoFocus","placeholder","onInput","Component","ImageGalleryItem","images","onClick","map","img","key","id","src","webformatURL","alt","tags","data-url","largeImageURL","Modal","backdropRef","createRef","url","handleKeyPress","code","handleClick","current","window","addEventListener","prevProps","ref","Button","page","prevState","onLoadMore","scrollTo","top","document","documentElement","scrollHeight","behavior","ImageGallery","dataset","response","isLoading","length","color","height","width","timeout","defaultProps","fetchImg","query","param","axios","get","then","data","hits","KEY","App","error","handleLoadMore","nextResponse","catch","finally","ReactDOM","render","querySelector"],"mappings":"uWAIqBA,G,iNAKnBC,MAAQ,CACNC,OAAQ,I,EAGVC,YAAc,YAAkC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAC/B,EAAKC,SAAL,eAAiBF,EAAOC,K,EAG1BE,aAAe,SAAAC,GACbA,EAAEC,iBADgB,IAIZC,EADa,EAAKV,MAAhBC,OAELU,QAAQ,MAAO,KACfC,OACAC,oBACKC,EAAa,EAAKC,MAAlBD,SAEJJ,IACFI,EAASJ,GACT,EAAKJ,SAAS,CACZL,OAAQ,O,wEAMZ,OACE,4BAAQe,UAAU,aAChB,0BAAMA,UAAU,aAAaF,SAAUG,KAAKV,cAC1C,4BAAQW,KAAK,SAASF,UAAU,qBAC9B,0BAAMA,UAAU,2BAAhB,WAGF,2BACEA,UAAU,mBACVE,KAAK,SACLC,aAAa,MACbf,KAAK,SACLgB,WAAS,EACTC,YAAY,2BACZC,QAASL,KAAKf,oB,GA9CaqB,c,iBC0BxBC,G,MA1BU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAClC,OAAOD,EAAOE,KAAI,SAAAC,GAAG,OACnB,wBAAIZ,UAAU,mBAAmBa,IAAKD,EAAIE,IACxC,yBACEC,IAAKH,EAAII,aACTC,IAAKL,EAAIM,KACTC,WAAUP,EAAIQ,cACdpB,UAAU,yBACVU,QAASA,UCPIW,G,iNAKnBC,YAAcC,sB,EAEdvC,MAAQ,CACNwC,IAAK,EAAKzB,MAAMyB,K,EAkBlBC,eAAiB,YACF,WADgB,EAAXC,MAElB,EAAKpC,SAAS,CAAEkC,IAAK,M,EAGvBG,YAAc,YAAiB,IAAdxC,EAAa,EAAbA,OACPyC,EAAY,EAAKN,YAAjBM,QACJA,GAAWzC,IAAWyC,GAE1B,EAAKtC,SAAS,CAAEkC,IAAK,M,mFAvBrBK,OAAOC,iBAAiB,UAAW7B,KAAKwB,kB,yCAGvBM,GAAY,IACrBP,EAAQvB,KAAKF,MAAbyB,IACJO,EAAUP,MAAQA,GAEtBvB,KAAKX,SAAS,CAAEkC,U,6CAIhBK,OAAOC,iBAAiB,UAAW7B,KAAKwB,kB,+BAehC,IACAD,EAAQvB,KAAKjB,MAAbwC,IAgBR,MAAe,KAARA,EACL,yBACExB,UAAU,UACVU,QAAST,KAAK0B,YACdK,IAAK/B,KAAKqB,aAEV,yBAAKtB,UAAU,SACb,yBAAKe,IAAKS,EAAKP,IAAI,GAAGjB,UAAU,UAGlC,S,GAjE2BO,cCDd0B,G,iNAKnBjD,MAAQ,CACNkD,KAAM,G,EAaRP,YAAc,WACZ,EAAKrC,UAAS,SAAA6C,GAAS,MAAK,CAC1BD,KAAMC,EAAUD,KAAO,OAKzBE,EAFuB,EAAKrC,MAApBqC,YACS,EAAKpD,MAAdkD,O,oFAfSjC,KAAKjB,MAAdkD,MACI,GAEZL,OAAOQ,SAAS,CACdC,IAAKC,SAASC,gBAAgBC,aAC9BC,SAAU,a,+BAeZ,OACE,yBAAK1C,UAAU,cACb,4BAAQA,UAAU,SAASE,KAAK,SAASQ,QAAST,KAAK0B,aAAvD,kB,GAhC4BpB,cCSfoC,G,iNAiBnB3D,MAAQ,CACNwC,IAAK,I,EAGPG,YAAc,YAAiB,IACrBH,EADoB,EAAbrC,OACQyD,QAAfpB,IACR,EAAKlC,SAAS,CAAEkC,S,wEAGR,IAAD,EACqCvB,KAAKF,MAAzC8C,EADD,EACCA,SAAUT,EADX,EACWA,WAAYU,EADvB,EACuBA,UACtBtB,EAAQvB,KAAKjB,MAAbwC,IAIR,OAA2B,IAApBqB,EAASE,OACd,uBAAG/C,UAAU,UAAb,sBACqB,4CADrB,wDAIE8C,EACF,kBAAC,IAAD,CACE9C,UAAU,SACVE,KAAK,OACL8C,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,MAGX,oCACE,wBAAInD,UAAU,gBACZ,kBAAC,EAAD,CAAkBS,OAAQoC,EAAUnC,QAAST,KAAK0B,eAEpD,kBAAC,EAAD,CAAQS,WAAYA,IACpB,kBAAC,EAAD,CAAOZ,IAAKA,S,GApDsBjB,cAArBoC,EACZS,aAAe,CACpBN,WAAW,G,qBCIAO,EAjBE,SAACxC,EAAKyC,GAAqB,IAAdpB,EAAa,uDAAN,EAC7BV,EAAM,2BACN+B,EAAK,aAASD,EAAT,iBAAuBpB,EAAvB,wDAEX,OAAOsB,IACJC,IAAIjC,EAAMX,EAAM0C,GAChBG,MAAK,SAAAb,GAAQ,OAAIA,EAASc,KAAKC,QAC/BF,MAAK,SAAAE,GAAI,OACRA,EAAKjD,KAAI,kBAAgD,CACvDG,GADO,EAAGA,GAEVI,KAFO,EAAOA,KAGdE,cAHO,EAAaA,cAIpBJ,aAJO,EAA4BA,qBCDrC6C,EAAM,0CAESC,E,2MACnB9E,MAAQ,CACNsE,MAAO,GACPT,SAAU,GACVC,WAAW,EACXiB,MAAO,M,EAsBTC,eAAiB,SAAA9B,GAAS,IAChBoB,EAAU,EAAKtE,MAAfsE,MAERD,EAASQ,EAAKP,EAAOpB,GAClBwB,MAAK,SAAAO,GACJ,EAAK3E,UAAS,gBAAGuD,EAAH,EAAGA,SAAH,MAAmB,CAC/BA,SAAS,GAAD,mBAAMA,GAAN,YAAmBoB,WAG9BC,OAAM,SAAAH,GAAK,OAAI,EAAKzE,SAAS,CAAEyE,aAC/BI,SAAQ,kBAAM,EAAK7E,SAAS,CAAEwD,WAAW,OAE5CjB,OAAOQ,SAAS,CACdC,IAAKC,SAASC,gBAAgBC,aAC9BC,SAAU,Y,EAIdnD,aAAe,SAAA+D,GACb,EAAKhE,SAAS,CAAEgE,W,kFAtCCvB,EAAWI,GAAY,IAAD,OAC/BmB,EAAUrD,KAAKjB,MAAfsE,MACJnB,EAAUmB,QAAUA,IAExBrD,KAAKX,SAAS,CAAEwD,WAAW,IAE3BO,EAASQ,EAAKP,GACXI,MAAK,SAAAb,GACJ,EAAKvD,UAAS,SAAA6C,GAAS,MAAK,CAAEU,SAAS,YAAKA,UAE7CqB,OAAM,SAAAH,GAAK,OAAI,EAAKzE,SAAS,CAAEyE,aAC/BI,SAAQ,kBAAM,EAAK7E,SAAS,CAAEwD,WAAW,OAE5CjB,OAAOQ,SAAS,CACdC,IAAK,EACLI,SAAU,c,+BA0BJ,IAAD,EACyBzC,KAAKjB,MAA7B6D,EADD,EACCA,SAAUC,EADX,EACWA,UAClB,OACE,oCACE,kBAAC,EAAD,CAAWhD,SAAUG,KAAKV,eAC1B,kBAAC,EAAD,CACEsD,SAAUA,EACVC,UAAWA,EACXV,WAAYnC,KAAK+D,sB,GAzDMzD,a,MCNjC6D,IAASC,OAAO,kBAAC,EAAD,CAAKrE,UAAU,QAAUuC,SAAS+B,cAAc,Y","file":"static/js/main.233442b9.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Searchbar.css';\n\nexport default class Searchbar extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    search: '',\n  };\n\n  handleInput = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { search } = this.state;\n    const correctSearch = search\n      .replace(/ +/g, ' ')\n      .trim()\n      .toLocaleLowerCase();\n    const { onSubmit } = this.props;\n\n    if (correctSearch) {\n      onSubmit(correctSearch);\n      this.setState({\n        search: '',\n      });\n    }\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"search\"\n            autoComplete=\"off\"\n            name=\"search\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            onInput={this.handleInput}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './ImageGalleryItem.css';\n\nconst ImageGalleryItem = ({ images, onClick }) => {\n  return images.map(img => (\n    <li className=\"ImageGalleryItem\" key={img.id}>\n      <img\n        src={img.webformatURL}\n        alt={img.tags}\n        data-url={img.largeImageURL}\n        className=\"ImageGalleryItem-image\"\n        onClick={onClick}\n      />\n    </li>\n  ));\n};\n\nImageGalleryItem.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      tags: PropTypes.string.isRequired,\n      webformatURL: PropTypes.string.isRequired,\n      largeImageURL: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default ImageGalleryItem;\n","import React, { Component, createRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Modal.css';\n\nexport default class Modal extends Component {\n  static propTypes = {\n    url: PropTypes.string.isRequired,\n  };\n\n  backdropRef = createRef();\n\n  state = {\n    url: this.props.url,\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyPress);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { url } = this.props;\n    if (prevProps.url === url) return;\n\n    this.setState({ url });\n  }\n\n  componentWillUnmount() {\n    window.addEventListener('keydown', this.handleKeyPress);\n  }\n\n  handleKeyPress = ({ code }) => {\n    if (code !== 'Escape') return;\n    this.setState({ url: '' });\n  };\n\n  handleClick = ({ target }) => {\n    const { current } = this.backdropRef;\n    if (current && target !== current) return;\n\n    this.setState({ url: '' });\n  };\n\n  render() {\n    const { url } = this.state;\n\n    // Хотел добавить лоадер на подгрузку изображения но попал в когнетивный дисонанс\n    // -\n    // На чистом js алгоритм моих действий был бы примерно таким:\n    // вешаю обработчик события load на картинку и если картинка загрузилась, то стилями скрываю лоадер\n    // -\n    // С реактом я могу только скрывать лоадер как только получу ответ от сервера\n    // но я не знаю как реализовать функционал в котором будет рендериться лоадер и как только изображение подгрузилось\n    // (не с сервера, а отобразилось в разметке)\n    // то пропадет лоадер и останется фотка.\n    // -\n    // Реализовать подход с перерендериванием компонента, для того чтобы убрать лоадер и оставить фото,\n    // не получиться так как неначто будет вешать событие load.\n    // Неужели точно так же как и в подходе с чистым js нужно скрывать стилями?\n    // Но если скрывать стилями, то следующий мой вопрос - как именно, с помощью рефов?\n    return url !== '' ? (\n      <div\n        className=\"Overlay\"\n        onClick={this.handleClick}\n        ref={this.backdropRef}\n      >\n        <div className=\"Modal\">\n          <img src={url} alt=\"\" className=\"img\" />\n        </div>\n      </div>\n    ) : null;\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Button.css';\n\nexport default class Button extends Component {\n  static propTypes = {\n    onLoadMore: PropTypes.func.isRequired,\n  };\n\n  state = {\n    page: 2,\n  };\n\n  componentDidUpdate() {\n    const { page } = this.state;\n    if (page <= 2) return;\n\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  }\n\n  handleClick = () => {\n    this.setState(prevState => ({\n      page: prevState.page + 1,\n    }));\n\n    const { onLoadMore } = this.props;\n    const { page } = this.state;\n    onLoadMore(page);\n  };\n\n  render() {\n    return (\n      <div className=\"Button-wrp\">\n        <button className=\"Button\" type=\"button\" onClick={this.handleClick}>\n          Load more\n        </button>\n      </div>\n    );\n  }\n}\n","// react\nimport React, { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport PropTypes from 'prop-types';\n\n// components\nimport ImageGalleryItem from './ImageGalleryItem/ImageGalleryItem';\nimport Modal from '../Modal/Modal';\nimport Button from '../Button/Button';\n\n// styles\nimport './ImageGallery.css';\n\nexport default class ImageGallery extends Component {\n  static defaultProps = {\n    isLoading: false,\n  };\n\n  static propTypes = {\n    response: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        tags: PropTypes.string.isRequired,\n        webformatURL: PropTypes.string.isRequired,\n      }).isRequired,\n    ).isRequired,\n    onLoadMore: PropTypes.func.isRequired,\n    isLoading: PropTypes.bool,\n  };\n\n  state = {\n    url: '',\n  };\n\n  handleClick = ({ target }) => {\n    const { url } = target.dataset;\n    this.setState({ url });\n  };\n\n  render() {\n    const { response, onLoadMore, isLoading } = this.props;\n    const { url } = this.state;\n\n    // перепробовал кучу вариантов, но лучше тернарных операторов ничего не придумал\n    // eslint неистово негодует от такого стиля написания\n    return response.length === 0 ? (\n      <p className=\"epmpty\">\n        Please, enter into <mark>search bar</mark> keywords that describe a\n        photos you are looking for\n      </p>\n    ) : isLoading ? (\n      <Loader\n        className=\"Loader\"\n        type=\"Oval\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n        timeout={3000}\n      />\n    ) : (\n      <>\n        <ul className=\"ImageGallery\">\n          <ImageGalleryItem images={response} onClick={this.handleClick} />\n        </ul>\n        <Button onLoadMore={onLoadMore} />\n        <Modal url={url} />\n      </>\n    );\n  }\n}\n","import axios from 'axios';\n\nconst fetchImg = (key, query, page = 1) => {\n  const url = 'https://pixabay.com/api/';\n  const param = `&q=${query}&page=${page}&per_page=12&image_type=photo&orientation=horizontal`;\n\n  return axios\n    .get(url + key + param)\n    .then(response => response.data.hits)\n    .then(hits =>\n      hits.map(({ id, tags, largeImageURL, webformatURL }) => ({\n        id,\n        tags,\n        largeImageURL,\n        webformatURL,\n      })),\n    );\n};\n\nexport default fetchImg;\n","import React, { Component } from 'react';\n\n// impor components\nimport Searchbar from './Searchbar/Searchbar';\nimport ImageGallery from './ImageGallery/ImageGallery';\n\n// import utils\nimport fetchImg from './Utils/ajaxQuery';\n\nconst KEY = '?key=14898579-fa1d2465db163140d99de90b7';\n\nexport default class App extends Component {\n  state = {\n    query: '',\n    response: [],\n    isLoading: false,\n    error: null,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { query } = this.state;\n    if (prevState.query === query) return;\n\n    this.setState({ isLoading: true });\n\n    fetchImg(KEY, query)\n      .then(response => {\n        this.setState(prevState => ({ response: [...response] }));\n      })\n      .catch(error => this.setState({ error }))\n      .finally(() => this.setState({ isLoading: false }));\n\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  }\n\n  handleLoadMore = page => {\n    const { query } = this.state;\n\n    fetchImg(KEY, query, page)\n      .then(nextResponse => {\n        this.setState(({ response }) => ({\n          response: [...response, ...nextResponse],\n        }));\n      })\n      .catch(error => this.setState({ error }))\n      .finally(() => this.setState({ isLoading: false }));\n\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  handleSubmit = query => {\n    this.setState({ query });\n  };\n\n  render() {\n    const { response, isLoading } = this.state;\n    return (\n      <>\n        <Searchbar onSubmit={this.handleSubmit} />\n        <ImageGallery\n          response={response}\n          isLoading={isLoading}\n          onLoadMore={this.handleLoadMore}\n        />\n      </>\n    );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './base.css';\n\nReactDOM.render(<App className=\"App\" />, document.querySelector('#root'));\n"],"sourceRoot":""}